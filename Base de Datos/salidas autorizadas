/*
MySQL Backup
Source Server Version: 5.6.12
Source Database: db_bodega
Date: 22/04/2016 15:38:23
*/

SET FOREIGN_KEY_CHECKS=0;

-- ----------------------------
--  Table structure for `detallesalidasautorizadas`
-- ----------------------------
DROP TABLE IF EXISTS `detallesalidasautorizadas`;
CREATE TABLE `detallesalidasautorizadas` (
  `iddetallesalidaautoriza` int(11) NOT NULL AUTO_INCREMENT,
  `salidaautoriza` int(11) DEFAULT NULL,
  `producto` varchar(80) DEFAULT NULL,
  `lote` int(11) DEFAULT NULL,
  `cantidad` int(11) DEFAULT NULL,
  `vrunidad` int(11) DEFAULT NULL,
  PRIMARY KEY (`iddetallesalidaautoriza`),
  KEY `frdevolucionpunto` (`salidaautoriza`),
  KEY `frproductodevolucionpunto` (`producto`),
  KEY `frlotesaleauto` (`lote`),
  CONSTRAINT `detallesalidasautorizadas_ibfk_1` FOREIGN KEY (`salidaautoriza`) REFERENCES `salidasautorizadas` (`idsalidaautorizada`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `detallesalidasautorizadas_ibfk_2` FOREIGN KEY (`producto`) REFERENCES `productosbase` (`codigobarras`) ON UPDATE CASCADE,
  CONSTRAINT `frlotesaleauto` FOREIGN KEY (`lote`) REFERENCES `lotes_almacenados` (`idlotealmacenado`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
--  Table structure for `salidasautorizadas`
-- ----------------------------
DROP TABLE IF EXISTS `salidasautorizadas`;
CREATE TABLE `salidasautorizadas` (
  `idsalidaautorizada` int(11) NOT NULL,
  `fechaemision` date DEFAULT NULL,
  `autorizado` varchar(100) DEFAULT NULL,
  `concepto` text,
  `realizado` char(20) DEFAULT NULL,
  `fechahoraingreso` datetime DEFAULT NULL,
  PRIMARY KEY (`idsalidaautorizada`),
  KEY `frpuntodev` (`autorizado`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
--  Records 
-- ----------------------------

-- ----------------------------
--  Trigger definition for `detallesalidasautorizadas`
-- ----------------------------
DELIMITER ;;
CREATE TRIGGER `restarstockautorizado` AFTER INSERT ON `detallesalidasautorizadas` FOR EACH ROW begin

UPDATE lotes_almacenados SET STOCKLOTE = STOCKLOTE - new.cantidad WHERE lotes_almacenados.idlotealmacenado = new.lote;

end
;;
DELIMITER ;
DELIMITER ;;
CREATE TRIGGER `addstockautorizado` BEFORE DELETE ON `detallesalidasautorizadas` FOR EACH ROW begin

UPDATE lotes_almacenados SET STOCKLOTE = STOCKLOTE +old.cantidad WHERE lotes_almacenados.idlotealmacenado = old.lote;

end
;;
DELIMITER ;
